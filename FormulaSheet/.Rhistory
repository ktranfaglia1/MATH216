pnorm(q = 15, mean = 11, sd = 4) - pnorm(q = 10, mean = 11, sd = 4)
Binom_plotter(3,0.2,0,3)
Binom_plotter(3,0.2,0,2)
pbinom(q=2, size=3, prob=0.2)
pnorm(q = 15, mean = 11, sd = 4) - pnorm(q = 10, mean = 11, sd = 4)
1 - pnorm(q = 20, mean = 11, sd = 4)
Binom_plotter(3,0.2,0,3)
Binom_plotter(3,0.2,0,2)
pbinom(q=2, size=3, prob=0.2)
pnorm(q = 15, mean = 11, sd = 4) - pnorm(q = 10, mean = 11, sd = 4)
1 - pnorm(q = 20, mean = 11, sd = 4)
qnorm(p=0.90, mean = 11, sd = 4)
Binom_plotter(3,0.2,0,3)
Binom_plotter(3,0.2,0,2)
pbinom(q=2, size=3, prob=0.2)
pnorm(q = 15, mean = 11, sd = 4) - pnorm(q = 10, mean = 11, sd = 4)
1 - pnorm(q = 20, mean = 11, sd = 4)
1 - qnorm(p=0.90, mean = 11, sd = 4)
Binom_plotter(3,0.2,0,3)
Binom_plotter(3,0.2,0,2)
pbinom(q=2, size=3, prob=0.2)
pnorm(q = 15, mean = 11, sd = 4) - pnorm(q = 10, mean = 11, sd = 4)
1 - pnorm(q = 20, mean = 11, sd = 4)
qnorm(p=0.90, mean = 11, sd = 4)
Binom_plotter(3,0.2,0,4)
Binom_plotter(3,0.2,0,2)
pbinom(q=2, size=3, prob=0.2)
pnorm(q = 15, mean = 11, sd = 4) - pnorm(q = 10, mean = 11, sd = 4)
1 - pnorm(q = 20, mean = 11, sd = 4)
qnorm(p=0.90, mean = 11, sd = 4)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE,message=FALSE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(flextable)
library(tidyr)
library(knitr)
library(tidyverse)
library(extraDistr)
1 - pnorm(q=2700, mean=2631, sd=500/sqrt(100))
pnorm(q=2600, mean=2631, sd=500/sqrt(100)) - pnorm(q=2500, mean=2631, sd=500/sqrt(100))
qnorm(p=0.6, mean=2631, sd=500/sqrt(100))
1-pnorm(q=2800, mean=2631, sd=500/sqrt(100)) # unusual
1-pnorm(q=2800, mean=2631, sd=500)
p <- 0.73
p
sqrt(p(1-p)/150)
p <- 0.73
p
sqrt(p*(1-p)/150)
1 - pnorm(q=0.70, mean=p, sd=0.03625)
pnorm(q=0.80, mean=p, sd=0.03625) - pnorm(q=0.76, mean=p, sd=0.03625)
pnorm(q=0.68, mean=p, sd=0.03625) # not unusual
knitr::opts_chunk$set(echo = TRUE, warning=FALSE,message=FALSE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(flextable)
library(tidyr)
library(knitr)
library(tidyverse)
library(extraDistr)
library(nortest)
library(car)
library(BSDA)
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
abs(mean(question1Data)) - abs(median(question1Data)) / abs(mean(question1Data))
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "greater", conf.level = 0.95)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.95)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "greater", conf.level = 0.95)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "greater", conf.level = 0.90)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
# Question 1
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
# Question 1
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
ad.test(question2DataX)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
# Question 1
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# ad.test(question2DataX) Does not work, sample size too small ... use shapiro test
shapiro.test(question2DataX)
qqPlot(question2DataX)
ad.test(question2DataY)
qqPlot(question2DataY)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
#t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
SIGN.test(x=question1Data, md=70, alternative = "less", conf.level = 0.90)
# Question 1
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# ad.test(question2DataX) Does not work, sample size too small ... use shapiro test
shapiro.test(question2DataX)
qqPlot(question2DataX)
ad.test(question2DataY)
qqPlot(question2DataY)
wilcox.test(x=question2DataY, y=question2DataY, mu=0, alternative = "greater", conf.level = 0.95)
wilcox.test(x=question2DataX, y=question2DataY, mu=0, alternative = "greater", conf.level = 0.95)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
#t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
SIGN.test(x=question1Data, md=70, alternative = "less", conf.level = 0.90)
# Question 2
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# ad.test(question2DataX) Does not work, sample size too small ... use shapiro test
shapiro.test(question2DataX)
qqPlot(question2DataX)
ad.test(question2DataY)
qqPlot(question2DataY)
wilcox.test(x=question2DataX, y=question2DataY, mu=0, alternative = "greater", conf.level = 0.95)
# Question 3
question3DataX <- c(57, 68, 77, 63, 72, 83)
question3DataY <- c(73, 69, 87, 69, 86, 84)
diff3 <- question3DataX - question3DataY
shapiro.test(diff3)
qqPlot(diff3)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
#t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
SIGN.test(x=question1Data, md=70, alternative = "less", conf.level = 0.90)
# Question 2
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# ad.test(question2DataX) Does not work, sample size too small ... use shapiro test
shapiro.test(question2DataX)
qqPlot(question2DataX)
ad.test(question2DataY)
qqPlot(question2DataY)
wilcox.test(x=question2DataX, y=question2DataY, mu=0, alternative = "greater", conf.level = 0.95)
# Question 3
question3DataX <- c(57, 68, 77, 63, 72, 83)
question3DataY <- c(73, 69, 87, 69, 86, 84)
diff3 <- question3DataX - question3DataY
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less")
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 4
question4Data <- read.csv("Exam3Prac4.csv")
View(question4Data)
ad.test(question4Data)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
#t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
SIGN.test(x=question1Data, md=70, alternative = "less", conf.level = 0.90)
# Question 2
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# ad.test(question2DataX) Does not work, sample size too small ... use shapiro test
shapiro.test(question2DataX)
qqPlot(question2DataX)
ad.test(question2DataY)
qqPlot(question2DataY)
wilcox.test(x=question2DataX, y=question2DataY, mu=0, alternative = "greater", conf.level = 0.95)
# Question 3
question3DataX <- c(57, 68, 77, 63, 72, 83)
question3DataY <- c(73, 69, 87, 69, 86, 84)
diff3 <- question3DataX - question3DataY
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less")
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 4
question4Data <- read.csv("Exam3Prac4.csv")
question4Datax <- question4Data$SampleData
ad.test(question4Datax)
qqPlot(question4Datax)
t.test(question4Datax, mu=8.5, alternative = "two.sided", conf.level = 0.93)
t.test(question4Datax, mu=8.5, alternative = "two.sided", conf.level = 0.95)
t.test(question4Datax, mu=8.5, alternative = "two.sided", conf.level = 0.93)
View(question4Data)
# Question 1
question1Data <- c(62, 75, 170, 47, 47, 81, 58, 2, 43, 52)
ad.test(question1Data)
qqPlot(question1Data)
(abs(mean(question1Data)) - abs(median(question1Data))) / abs(mean(question1Data))
#t.test(x=question1Data, mu=70, alternative = "less", conf.level = 0.90)
SIGN.test(x=question1Data, md=70, alternative = "less", conf.level = 0.90)
# Question 2
question2DataX <- c(210, 230, 219, 229, 223, 240, 315)
question2DataY <- c(126, 138, 127, 266, 174, 180, 147, 156, 148)
# ad.test(question2DataX) Does not work, sample size too small ... use shapiro test
shapiro.test(question2DataX)
qqPlot(question2DataX)
ad.test(question2DataY)
qqPlot(question2DataY)
wilcox.test(x=question2DataX, y=question2DataY, mu=0, alternative = "greater", conf.level = 0.95)
# Question 3
question3DataX <- c(57, 68, 77, 63, 72, 83)
question3DataY <- c(73, 69, 87, 69, 86, 84)
diff3 <- question3DataX - question3DataY
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less")
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 4
question4Data <- read.csv("Exam3Prac4.csv")
question4Datax <- question4Data$SampleData
ad.test(question4Datax)
qqPlot(question4Datax)
t.test(question4Datax, mu=8.5, alternative = "two.sided", conf.level = 0.93)
# Question 5
zsum.test(mean.x=548, sigma.x=116, n.x=80, mu=525, alternative = "greater")
zsum.test(mean.x=548, sigma.x=116, n.x=80, mu=525, alternative = "two.sided", conf.level=0.96)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE,message=FALSE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(flextable)
library(tidyr)
library(knitr)
library(tidyverse)
library(extraDistr)
library(nortest)
library(car)
library(BSDA)
# Question 1
Data1 <- c(564, 498, 303, 300, 307)
ad.test(Data1)
# Question 1
Data1 <- c(564, 498, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, md=300, alternative = "greater", conf.level = 0.90)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(57, 68, 77, 63, 72, 83)
Data2Y <- c(73, 69, 87, 69, 86, 84)
diff3 <- Data2X - Data2Y
ad.test(diff3)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff3 <- Data2X - Data2Y
ad.test(diff3)
qqPlot(diff3)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff2 <- Data2X - Data2Y
ad.test(diff2)
qqPlot(diff2)
t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff2 <- Data2X - Data2Y
ad.test(diff2)
qqPlot(diff2)
t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 3
Data3X <- c(67, 68, 78, 75, 84)
Data3Y <- c(59, 63, 81, 74, 78)
diff3 <- Data3X - Data3Y
shapiro.test(diff3)
qqPlot(diff3)
#t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff2 <- Data2X - Data2Y
ad.test(diff2)
qqPlot(diff2)
t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 3
Data3X <- c(67, 68, 78, 75, 84)
Data3Y <- c(59, 63, 81, 74, 78)
diff3 <- Data3X - Data3Y
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less", conf.level = 0.95)
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff2 <- Data2X - Data2Y
ad.test(diff2)
qqPlot(diff2)
t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 3
Data3X <- c(67, 68, 78, 75, 84)
Data3Y <- c(59, 63, 81, 74, 78)
diff3 <- Data3X - Data3Y
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less", conf.level = 0.95)
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 4
QData4 <- read.csv("Exam3Prob4.csv")
Data4 <- QData4$SampleData
ad.test(question4Datax)
qqPlot(question4Datax)
View(QData4)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff2 <- Data2X - Data2Y
ad.test(diff2)
qqPlot(diff2)
t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 3
Data3X <- c(67, 68, 78, 75, 84)
Data3Y <- c(59, 63, 81, 74, 78)
diff3 <- Data3X - Data3Y
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less", conf.level = 0.95)
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 4
QData4 <- read.csv("Exam3Prob4.csv")
Data4 <- QData4$SampleData
ad.test(Data4)
qqPlot(Data4)
t.test(Data4, mu=8.5, alternative = "two.sided", conf.level = 0.93)
t.test(Data4, mu=8.5, alternative = "two.sided", conf.level = 0.95)
t.test(Data4, mu=8.5, alternative = "two.sided", conf.level = 0.93)
# Question 1
Data1 <- c(564, 498, 259, 303, 300, 307)
shapiro.test(Data1)
qqPlot(Data1)
t.test(Data1, mu=300, alternative = "greater", conf.level = 0.90)
# Question 2
Data2X <- c(104, 82, 102, 96, 129, 89, 114, 107, 89, 103)
Data2Y <- c(103, 103, 91, 113, 102, 103, 92, 90, 114, 113)
diff2 <- Data2X - Data2Y
ad.test(diff2)
qqPlot(diff2)
t.test(diff2, mu=0, alternative = "two.sided", conf.level = 0.95)
# Question 3
Data3X <- c(67, 68, 78, 75, 84)
Data3Y <- c(59, 63, 81, 74, 78)
diff3 <- Data3X - Data3Y
shapiro.test(diff3)
qqPlot(diff3)
t.test(diff3, mu=0, alternative = "less", conf.level = 0.95)
t.test(diff3, mu=0, alternative = "two.sided", conf.level = 0.97)
# Question 4
QData4 <- read.csv("Exam3Prob4.csv")
Data4 <- QData4$SampleData
ad.test(Data4)
qqPlot(Data4)
t.test(Data4, mu=8.5, alternative = "two.sided", conf.level = 0.93)
# Question 5
zsum.test(mean.x=4.98, sigma.x=1.62, n.x=258, mu=4.7, alternative = "greater")
zsum.test(mean.x=4.98, sigma.x=1.62, n.x=258, mu=4.7, alternative = "two.sided", conf.level=0.96)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE,message=FALSE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(flextable)
library(tidyr)
library(knitr)
library(tidyverse)
library(extraDistr)
library(nortest)
library(car)
library(BSDA)
data22 < read.csv("FinalPrac22")
data22 <- read.csv("FinalPrac22")
data22 <- read.csv("FinalPrac22.csv")
x <- data22$X
y <- data22$Y
mod22 <- lm(y-x)
data22 <- read.csv("FinalPrac22.csv")
x <- data22$X
y <- data22$Y
mod22<-lm(y-x)
data22 <- read.csv("FinalPrac22.csv")
x <- data22$X
y <- data22$Y
mod22<-lm(y~x)
summary(mod22)
anova(mod22)
confint(mod22, level = 0.95)
cor(x,y)
predict(mod22, newData=data.frame(x=1.25), level = 0.94, interval = "confidence")
chisq.test(x=c(218,497,425,157), p=c(0.185,0.392, 0.412), 0.011)
chisq.test(x=c(218,497,425,157), p=c(0.185,0.392, 0.412, 0.011))
# Perform Chi-Squared test on a data set
chisq.test(x=c(218,497,425,157), p=c(0.185,0.392,0.412,0.011))
# Perform Chi-Squared given the contigenency table
tab1 <- matrix(c(24,9,13,289,100,565), nrow=2, ncol=3, byrow=TRUE)
tab1
chisq.test(tabl1, correct=TRUE)
# Perform Chi-Squared test on a data set
chisq.test(x=c(218,497,425,157), p=c(0.185,0.392,0.412,0.011))
# Perform Chi-Squared given the contigenency table
tab1 <- matrix(c(24,9,13,289,100,565), nrow=2, ncol=3, byrow=TRUE)
tab1
chisq.test(tab1, correct=TRUE)
# Get prediction interval
predict(mod22, newData=data.frame(x=1.25), level = 0.94, interval = "predict")
